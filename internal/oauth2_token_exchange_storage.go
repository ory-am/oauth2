// Copyright Â© 2023 Ory Corp
// SPDX-License-Identifier: Apache-2.0

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ory/fosite/handler/rfc8693 (interfaces: RFC8693Storage)

// Package internal is a generated GoMock package.
package internal

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	fosite "github.com/ory/fosite"
	jwt "github.com/ory/fosite/token/jwt"
)

// MockRFC8693Storage is a mock of RFC8693Storage interface.
type MockRFC8693Storage struct {
	ctrl     *gomock.Controller
	recorder *MockRFC8693StorageMockRecorder
}

// MockRFC8693StorageMockRecorder is the mock recorder for MockRFC8693Storage.
type MockRFC8693StorageMockRecorder struct {
	mock *MockRFC8693Storage
}

// NewMockRFC8693Storage creates a new mock instance.
func NewMockRFC8693Storage(ctrl *gomock.Controller) *MockRFC8693Storage {
	mock := &MockRFC8693Storage{ctrl: ctrl}
	mock.recorder = &MockRFC8693StorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRFC8693Storage) EXPECT() *MockRFC8693StorageMockRecorder {
	return m.recorder
}

// GetAllowedClientIDs mocks base method.
func (m *MockRFC8693Storage) GetAllowedClientIDs(arg0 context.Context, arg1 string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllowedClientIDs", arg0, arg1)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllowedClientIDs indicates an expected call of GetAllowedClientIDs.
func (mr *MockRFC8693StorageMockRecorder) GetAllowedClientIDs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllowedClientIDs", reflect.TypeOf((*MockRFC8693Storage)(nil).GetAllowedClientIDs), arg0, arg1)
}

// GetIDTokenPublicKey mocks base method.
func (m *MockRFC8693Storage) GetIDTokenPublicKey(arg0 context.Context, arg1, arg2 string) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIDTokenPublicKey", arg0, arg1, arg2)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIDTokenPublicKey indicates an expected call of GetIDTokenPublicKey.
func (mr *MockRFC8693StorageMockRecorder) GetIDTokenPublicKey(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIDTokenPublicKey", reflect.TypeOf((*MockRFC8693Storage)(nil).GetIDTokenPublicKey), arg0, arg1, arg2)
}

// GetImpersonateSubject mocks base method.
func (m *MockRFC8693Storage) GetImpersonateSubject(arg0 context.Context, arg1 jwt.MapClaims, arg2 fosite.Requester) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetImpersonateSubject", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetImpersonateSubject indicates an expected call of GetImpersonateSubject.
func (mr *MockRFC8693StorageMockRecorder) GetImpersonateSubject(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetImpersonateSubject", reflect.TypeOf((*MockRFC8693Storage)(nil).GetImpersonateSubject), arg0, arg1, arg2)
}
