// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/ory-am/fosite/handler/core/explicit (interfaces: AuthorizeCodeGrantStorage)

package internal

import (
	gomock "github.com/golang/mock/gomock"
	fosite "github.com/ory-am/fosite"
)

// Mock of AuthorizeCodeGrantStorage interface
type MockAuthorizeCodeGrantStorage struct {
	ctrl     *gomock.Controller
	recorder *_MockAuthorizeCodeGrantStorageRecorder
}

// Recorder for MockAuthorizeCodeGrantStorage (not exported)
type _MockAuthorizeCodeGrantStorageRecorder struct {
	mock *MockAuthorizeCodeGrantStorage
}

func NewMockAuthorizeCodeGrantStorage(ctrl *gomock.Controller) *MockAuthorizeCodeGrantStorage {
	mock := &MockAuthorizeCodeGrantStorage{ctrl: ctrl}
	mock.recorder = &_MockAuthorizeCodeGrantStorageRecorder{mock}
	return mock
}

func (_m *MockAuthorizeCodeGrantStorage) EXPECT() *_MockAuthorizeCodeGrantStorageRecorder {
	return _m.recorder
}

func (_m *MockAuthorizeCodeGrantStorage) CreateAccessTokenSession(_param0 string, _param1 fosite.Requester) error {
	ret := _m.ctrl.Call(_m, "CreateAccessTokenSession", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockAuthorizeCodeGrantStorageRecorder) CreateAccessTokenSession(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateAccessTokenSession", arg0, arg1)
}

func (_m *MockAuthorizeCodeGrantStorage) CreateAuthorizeCodeSession(_param0 string, _param1 fosite.AuthorizeRequester) error {
	ret := _m.ctrl.Call(_m, "CreateAuthorizeCodeSession", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockAuthorizeCodeGrantStorageRecorder) CreateAuthorizeCodeSession(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateAuthorizeCodeSession", arg0, arg1)
}

func (_m *MockAuthorizeCodeGrantStorage) CreateRefreshTokenSession(_param0 string, _param1 fosite.Requester) error {
	ret := _m.ctrl.Call(_m, "CreateRefreshTokenSession", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockAuthorizeCodeGrantStorageRecorder) CreateRefreshTokenSession(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateRefreshTokenSession", arg0, arg1)
}

func (_m *MockAuthorizeCodeGrantStorage) DeleteAccessTokenSession(_param0 string) error {
	ret := _m.ctrl.Call(_m, "DeleteAccessTokenSession", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockAuthorizeCodeGrantStorageRecorder) DeleteAccessTokenSession(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteAccessTokenSession", arg0)
}

func (_m *MockAuthorizeCodeGrantStorage) DeleteAuthorizeCodeSession(_param0 string) error {
	ret := _m.ctrl.Call(_m, "DeleteAuthorizeCodeSession", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockAuthorizeCodeGrantStorageRecorder) DeleteAuthorizeCodeSession(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteAuthorizeCodeSession", arg0)
}

func (_m *MockAuthorizeCodeGrantStorage) DeleteRefreshTokenSession(_param0 string) error {
	ret := _m.ctrl.Call(_m, "DeleteRefreshTokenSession", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockAuthorizeCodeGrantStorageRecorder) DeleteRefreshTokenSession(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteRefreshTokenSession", arg0)
}

func (_m *MockAuthorizeCodeGrantStorage) GetAccessTokenSession(_param0 string, _param1 interface{}) (fosite.Requester, error) {
	ret := _m.ctrl.Call(_m, "GetAccessTokenSession", _param0, _param1)
	ret0, _ := ret[0].(fosite.Requester)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAuthorizeCodeGrantStorageRecorder) GetAccessTokenSession(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAccessTokenSession", arg0, arg1)
}

func (_m *MockAuthorizeCodeGrantStorage) GetAuthorizeCodeSession(_param0 string, _param1 interface{}) (fosite.AuthorizeRequester, error) {
	ret := _m.ctrl.Call(_m, "GetAuthorizeCodeSession", _param0, _param1)
	ret0, _ := ret[0].(fosite.AuthorizeRequester)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAuthorizeCodeGrantStorageRecorder) GetAuthorizeCodeSession(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAuthorizeCodeSession", arg0, arg1)
}

func (_m *MockAuthorizeCodeGrantStorage) GetRefreshTokenSession(_param0 string, _param1 interface{}) (fosite.Requester, error) {
	ret := _m.ctrl.Call(_m, "GetRefreshTokenSession", _param0, _param1)
	ret0, _ := ret[0].(fosite.Requester)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAuthorizeCodeGrantStorageRecorder) GetRefreshTokenSession(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetRefreshTokenSession", arg0, arg1)
}
