// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/ory-am/fosite/handler/oauth2 (interfaces: TokenRevocationStorage)

package internal

import (
	gomock "github.com/golang/mock/gomock"
	fosite "github.com/ory-am/fosite"
	context "golang.org/x/net/context"
)

// Mock of TokenRevocationStorage interface
type MockTokenRevocationStorage struct {
	ctrl     *gomock.Controller
	recorder *_MockTokenRevocationStorageRecorder
}

// Recorder for MockTokenRevocationStorage (not exported)
type _MockTokenRevocationStorageRecorder struct {
	mock *MockTokenRevocationStorage
}

func NewMockTokenRevocationStorage(ctrl *gomock.Controller) *MockTokenRevocationStorage {
	mock := &MockTokenRevocationStorage{ctrl: ctrl}
	mock.recorder = &_MockTokenRevocationStorageRecorder{mock}
	return mock
}

func (_m *MockTokenRevocationStorage) EXPECT() *_MockTokenRevocationStorageRecorder {
	return _m.recorder
}

func (_m *MockTokenRevocationStorage) AccessTokenSignature(_param0 string) string {
	ret := _m.ctrl.Call(_m, "AccessTokenSignature", _param0)
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockTokenRevocationStorageRecorder) AccessTokenSignature(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AccessTokenSignature", arg0)
}

func (_m *MockTokenRevocationStorage) GenerateAccessToken(_param0 context.Context, _param1 fosite.Requester) (string, string, error) {
	ret := _m.ctrl.Call(_m, "GenerateAccessToken", _param0, _param1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockTokenRevocationStorageRecorder) GenerateAccessToken(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GenerateAccessToken", arg0, arg1)
}

func (_m *MockTokenRevocationStorage) GenerateRefreshToken(_param0 context.Context, _param1 fosite.Requester) (string, string, error) {
	ret := _m.ctrl.Call(_m, "GenerateRefreshToken", _param0, _param1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockTokenRevocationStorageRecorder) GenerateRefreshToken(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GenerateRefreshToken", arg0, arg1)
}

func (_m *MockTokenRevocationStorage) RefreshTokenSignature(_param0 string) string {
	ret := _m.ctrl.Call(_m, "RefreshTokenSignature", _param0)
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockTokenRevocationStorageRecorder) RefreshTokenSignature(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RefreshTokenSignature", arg0)
}

func (_m *MockTokenRevocationStorage) RevokeAccessToken(_param0 context.Context, _param1 string) {
	_m.ctrl.Call(_m, "RevokeAccessToken", _param0, _param1)
}

func (_mr *_MockTokenRevocationStorageRecorder) RevokeAccessToken(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RevokeAccessToken", arg0, arg1)
}

func (_m *MockTokenRevocationStorage) RevokeRefreshToken(_param0 context.Context, _param1 string) {
	_m.ctrl.Call(_m, "RevokeRefreshToken", _param0, _param1)
}

func (_mr *_MockTokenRevocationStorageRecorder) RevokeRefreshToken(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RevokeRefreshToken", arg0, arg1)
}

func (_m *MockTokenRevocationStorage) ValidateAccessToken(_param0 context.Context, _param1 fosite.Requester, _param2 string) error {
	ret := _m.ctrl.Call(_m, "ValidateAccessToken", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockTokenRevocationStorageRecorder) ValidateAccessToken(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ValidateAccessToken", arg0, arg1, arg2)
}

func (_m *MockTokenRevocationStorage) ValidateRefreshToken(_param0 context.Context, _param1 fosite.Requester, _param2 string) error {
	ret := _m.ctrl.Call(_m, "ValidateRefreshToken", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockTokenRevocationStorageRecorder) ValidateRefreshToken(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ValidateRefreshToken", arg0, arg1, arg2)
}
