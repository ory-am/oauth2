// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/ory-am/fosite (interfaces: AuthorizedRequestValidator)

package internal

import (
	gomock "github.com/golang/mock/gomock"
	fosite "github.com/ory-am/fosite"
	context "golang.org/x/net/context"
	http "net/http"
)

// Mock of AuthorizedRequestValidator interface
type MockAuthorizedRequestValidator struct {
	ctrl     *gomock.Controller
	recorder *_MockAuthorizedRequestValidatorRecorder
}

// Recorder for MockAuthorizedRequestValidator (not exported)
type _MockAuthorizedRequestValidatorRecorder struct {
	mock *MockAuthorizedRequestValidator
}

func NewMockAuthorizedRequestValidator(ctrl *gomock.Controller) *MockAuthorizedRequestValidator {
	mock := &MockAuthorizedRequestValidator{ctrl: ctrl}
	mock.recorder = &_MockAuthorizedRequestValidatorRecorder{mock}
	return mock
}

func (_m *MockAuthorizedRequestValidator) EXPECT() *_MockAuthorizedRequestValidatorRecorder {
	return _m.recorder
}

func (_m *MockAuthorizedRequestValidator) ValidateRequest(_param0 context.Context, _param1 *http.Request, _param2 fosite.AccessRequester) (context.Context, error) {
	ret := _m.ctrl.Call(_m, "ValidateRequest", _param0, _param1, _param2)
	ret0, _ := ret[0].(context.Context)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAuthorizedRequestValidatorRecorder) ValidateRequest(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ValidateRequest", arg0, arg1, arg2)
}
